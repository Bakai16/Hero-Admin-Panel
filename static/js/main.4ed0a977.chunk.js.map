{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","actions/index.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/filters.js","store/index.js","index.js"],"names":["useHttp","request","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","heroesAdapter","createEntityAdapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","createAsyncThunk","heroesSlice","createSlice","name","reducers","heroCreated","state","action","addOne","payload","heroDeleted","removeOne","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","filteredHeroesSelector","createSelector","filters","activeFilter","selectAll","filter","heroes","item","element","getSelectors","heroesFetching","heroesFetched","heroesFetchingError","HeroesListItem","elementClassName","description","onDelete","className","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","filteredHeroes","useSelector","dispatch","useDispatch","useEffect","useCallback","id","then","console","log","catch","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","filtersLoadingStatus","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","filtersFetching","filtersFetched","filtersFetchingError","HeroesFilters","fetchFilter","btnClass","App","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ed0a977.chunk.js","sourcesContent":["\n\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request =  async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {  \n            throw e;\n        }\n    };\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}","import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\nimport { useHttp } from \"../../hooks/http.hook\";\n\nconst heroesAdapter = createEntityAdapter();\n \nconst initialState = heroesAdapter.getInitialState({\n    heroesLoadingStatus: 'idle'\n});\n\nexport const fetchHeroes = createAsyncThunk(\n    'heroes/fetchHeroes',\n    () => {\n        const {request} = useHttp(); \n        return request(\"http://localhost:3001/heroes\")\n    }\n);\n\nconst heroesSlice = createSlice({\n    name: 'heroes',\n    initialState,\n    reducers: {\n        heroCreated : (state, action) => {\n            heroesAdapter.addOne(state, action.payload)\n        },\n        heroDeleted : (state, action) =>{\n            heroesAdapter.removeOne(state, action.payload);\n        }\n    }, \n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchHeroes.pending, state => {state.heroesLoadingStatus = 'loading'})\n            .addCase(fetchHeroes.fulfilled, (state, action) =>{\n                state.heroesLoadingStatus = 'idle';\n                heroesAdapter.setAll(state, action.payload);\n            })\n            .addCase(fetchHeroes.rejected, state => { state.heroesLoadingStatus = 'error'})\n            .addDefaultCase(() => {})\n    }\n})\n\nconst { actions, reducer } = heroesSlice;\n\nexport const filteredHeroesSelector = createSelector(\n    (state) => state.filters.activeFilter,\n    selectAll,\n    (filter, heroes) => {\n        if (filter === 'all') { \n            return heroes;\n        } else {\n            return heroes.filter(item => item.element === filter);\n        }\n    }\n);\n\nexport default reducer;\n\nconst {selectAll} = heroesAdapter.getSelectors(state => state.heroes); \n\nexport const {\n    heroesFetching,\n    heroesFetched,\n    heroesFetchingError, \n    heroCreated,\n    heroDeleted   \n} = actions;","\nconst HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete} \n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\nimport { createSelector } from '@reduxjs/toolkit';  \n\nimport { heroDeleted, fetchHeroes, filteredHeroesSelector } from './heroesSlice';\n\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss'; \n \nconst HeroesList = () => { \n    const filteredHeroes = useSelector(filteredHeroesSelector);\n    const heroesLoadingStatus = useSelector(state => state.heroes.heroesLoadingStatus);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n  \n\n    useEffect(() => {\n        dispatch(fetchHeroes());\n        // eslint-disable-next-line\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n            .then(data => console.log(data, 'Deleted'))\n            .then(dispatch(heroDeleted(id)))\n            .catch(err => console.log(err));\n        // eslint-disable-next-line  \n    }, [request]);\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({id, ...props}) => {\n            return (\n                <CSSTransition \n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <HeroesListItem  {...props} onDelete={() => onDelete(id)}/>\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\">\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","import {useHttp} from '../../hooks/http.hook';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { heroCreated } from '../../components/heroesList/heroesSlice';\n\nconst HeroesAddForm = () => {\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const {filters, filtersLoadingStatus} = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n            .then(res => console.log(res, 'Отправка успешна'))\n            .then(dispatch(heroCreated(newHero)))\n            .catch(err => console.log(err));\n\n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Загрузка элементов</option>\n        } else if (status === \"error\") {\n            return <option>Ошибка загрузки</option>\n        }\n        \n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                // eslint-disable-next-line\n                if (name === 'all')  return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={heroElement}\n                    onChange={(e) => setHeroElement(e.target.value)}>\n                    <option value=\"\">Я владею элементом...</option>\n                    {renderFilters(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { createAction } from \"@reduxjs/toolkit\"; \nimport {heroesFetching, heroesFetched, heroesFetchingError } from '../components/heroesList/heroesSlice'\n\nexport const fetchFilter = (request) => (dispatch) => {\n    dispatch(filtersFetching());\n        request(\"http://localhost:3001/filters\")\n            .then(data => dispatch(filtersFetched(data)))\n            .catch(() => dispatch(filtersFetchingError()))\n}\n\nexport const filtersFetching = () => {\n    return {\n        type: 'FILTERS_FETCHING'\n    }\n}\n\n\nexport const filtersFetched = (filters) =>  {\n    return{\n        type: 'FILTERS_FETCHED',\n        payload: filters\n    }\n}\n\nexport const filtersFetchingError = () => {\n    return {\n        type: 'FILTERS_FETCHING_ERROR'\n    }\n}\n\n// export const filtersFetchingError = createAction('FILTERS_FETCHING_ERROR');\n\nexport const activeFilterChanged = (filter) => {\n    return {\n        type: 'ACTIVE_FILTER_CHANGED',\n        payload: filter\n    }\n}\n","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { fetchFilter, activeFilterChanged } from '../../actions';\nimport Spinner from '../spinner/Spinner';\n\nconst HeroesFilters = () => {\n\n    const {filters, filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchFilter(request));\n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\n        }\n\n        return arr.map(({name, className, label}) => {\n\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n            \n            return <button \n                        key={name} \n                        id={name} \n                        className={btnClass}\n                        onClick={() => dispatch(activeFilterChanged(name))}\n                        >{label}</button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","const initialState = {\n    filters: [],\n    filtersLoadingStatus: 'idle',\n    activeFilter: 'all'\n}\n\nconst filters = (state = initialState, action) => {\n    switch (action.type) {\n        case 'FILTERS_FETCHING':\n            return {\n                ...state,\n                filtersLoadingStatus: 'loading'\n            }\n        case 'FILTERS_FETCHED':\n            return {\n                ...state,\n                filters: action.payload,\n                filtersLoadingStatus: 'idle'\n            }\n        case 'FILTERS_FETCHING_ERROR':\n            return {\n                ...state,\n                filtersLoadingStatus: 'error'\n            }\n        case 'ACTIVE_FILTER_CHANGED':\n            return {\n                ...state,\n                activeFilter: action.payload\n            }\n        default: return state\n    }\n}\n\nexport default filters;","// import { createStore, combineReducers, compose, applyMiddleware} from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\n// import ReduxThunk from 'redux-thunk'; не использую\nimport heroes from '../components/heroesList/heroesSlice';\nimport filters from '../reducers/filters';\n\nconst stringMiddleware = () => (next) => (action) =>{\n    if(typeof action === 'string'){\n        return next({\n            type: action\n        })\n    } \n    return next(action); \n};\n\n// const store = createStore( \n//                     combineReducers({heroes, filters}),\n//                     compose(\n//                         applyMiddleware(ReduxThunk, stringMiddleware),\n//                         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//                     ));\n\nconst store = configureStore({\n    reducer: {heroes, filters}, \n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware), \n    devTools: process.env.NODE_ENV !== 'production', \n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}