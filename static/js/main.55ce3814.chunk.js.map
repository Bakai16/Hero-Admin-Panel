{"version":3,"sources":["hooks/http.hook.js","actions/index.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/heroes.js","reducers/filters.js","store/index.js","index.js"],"names":["useHttp","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","heroesFetching","createAction","heroesFetched","heroesFetchingError","filtersFetching","filtersFetched","filtersFetchingError","activeFilterChanged","heroCreated","heroDeleted","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","filteredHeroesSelector","createSelector","state","filters","activeFilter","heroes","filter","console","log","item","filteredHeroes","useSelector","heroesLoadingStatus","dispatch","useDispatch","useEffect","then","catch","fetchHeroes","id","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","filtersLoadingStatus","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","HeroesFilters","fetchFilter","btnClass","App","createReducer","action","payload","push","initialState","stringMiddleware","next","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55ce3814.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchHeroes = (request) => (dispatch) => {\n    dispatch(heroesFetching());\n        request(\"http://localhost:3001/heroes\")\n            .then(data => dispatch(heroesFetched(data)))\n            .catch(() => dispatch(heroesFetchingError()))\n}\n\nexport const fetchFilter = (request) => (dispatch) => {\n    dispatch(filtersFetching());\n        request(\"http://localhost:3001/filters\")\n            .then(data => dispatch(filtersFetched(data)))\n            .catch(() => dispatch(filtersFetchingError()))\n}\n\n// export const heroesFetching = () => {\n//     return {\n//         type: 'HEROES_FETCHING'\n//     }\n// }\n\nexport const heroesFetching = createAction('HEROES_FETCHING')\n\n\n// export const heroesFetched = (heroes) => {\n//     return {\n//         type: 'HEROES_FETCHED',\n//         payload: heroes\n//     }\n// }\n\nexport const heroesFetched = createAction('HEROES_FETCHED');\n\n// export const heroesFetchingError = () => {\n//     return {\n//         type: 'HEROES_FETCHING_ERROR'\n//     }\n// }\n\nexport const heroesFetchingError = createAction('HEROES_FETCHING_ERROR');\n\n// export const filtersFetching = () => {\n//     return {\n//         type: 'FILTERS_FETCHING'\n//     }\n// }\n\nexport const filtersFetching = createAction('FILTERS_FETCHING');\n\n// export const filtersFetched = (filters) =>  {\n//     return{\n//         type: 'FILTERS_FETCHED',\n//         payload: filters\n//     }\n// }\n\nexport const filtersFetched = createAction('FILTERS_FETCHED');\n\n// export const filtersFetched = (filters) => (dispatch) => {\n//     setTimeout(() =>{\n//         dispatch({\n//             type: 'FILTERS_FETCHED',\n//             payload: filters\n//         })\n//     }, 1000)\n// }\n\n// export const filtersFetchingError = () => {\n//     return {\n//         type: 'FILTERS_FETCHING_ERROR'\n//     }\n// }\n\nexport const filtersFetchingError = createAction('FILTERS_FETCHING_ERROR');\n\n// export const activeFilterChanged = (filter) => {\n//     return {\n//         type: 'ACTIVE_FILTER_CHANGED',\n//         payload: filter\n//     }\n// }\n\nexport const activeFilterChanged = createAction('ACTIVE_FILTER_CHANGED');\n\n// export const heroCreated = (hero) => {\n//     return {\n//         type: 'HERO_CREATED',\n//         payload: hero\n//     }\n// }\n\nexport const heroCreated = ('HERO_CREATED');\n\n// export const heroDeleted = (id) => {\n//     return {\n//         type: 'HERO_DELETED',\n//         payload: id\n//     }\n// }\n\nexport const heroDeleted = createAction('HERO_DELETED');","\nconst HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete} \n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\nimport { createSelector } from 'reselect';\n\nimport { fetchHeroes, heroDeleted } from '../../actions';\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n\nconst HeroesList = () => {\n\n    const filteredHeroesSelector = createSelector(\n        (state) => state.filters.activeFilter,\n        (state) => state.heroes.heroes,\n        (filter, heroes) => {\n            if (filter === 'all') {\n                console.log('render');\n                return heroes;\n            } else {\n                return heroes.filter(item => item.element === filter);\n            }\n        }\n    );\n\n    const filteredHeroes = useSelector(filteredHeroesSelector);\n    const heroesLoadingStatus = useSelector(state => state.heroes.heroesLoadingStatus);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchHeroes(request));\n        // eslint-disable-next-line\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n            .then(data => console.log(data, 'Deleted'))\n            .then(dispatch(heroDeleted(id)))\n            .catch(err => console.log(err));\n        // eslint-disable-next-line  \n    }, [request]);\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({id, ...props}) => {\n            return (\n                <CSSTransition \n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <HeroesListItem  {...props} onDelete={() => onDelete(id)}/>\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\">\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","import {useHttp} from '../../hooks/http.hook';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { heroCreated } from '../../actions';\n\nconst HeroesAddForm = () => {\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const {filters, filtersLoadingStatus} = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n            .then(res => console.log(res, 'Отправка успешна'))\n            .then(dispatch(heroCreated(newHero)))\n            .catch(err => console.log(err));\n\n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Загрузка элементов</option>\n        } else if (status === \"error\") {\n            return <option>Ошибка загрузки</option>\n        }\n        \n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                // eslint-disable-next-line\n                if (name === 'all')  return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={heroElement}\n                    onChange={(e) => setHeroElement(e.target.value)}>\n                    <option value=\"\">Я владею элементом...</option>\n                    {renderFilters(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { fetchFilter, activeFilterChanged } from '../../actions';\nimport Spinner from '../spinner/Spinner';\n\nconst HeroesFilters = () => {\n\n    const {filters, filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchFilter(request));\n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\n        }\n\n        return arr.map(({name, className, label}) => {\n\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n            \n            return <button \n                        key={name} \n                        id={name} \n                        className={btnClass}\n                        onClick={() => dispatch(activeFilterChanged(name))}\n                        >{label}</button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import { createReducer  } from \"@reduxjs/toolkit\" ;\nimport {\n    heroesFetching,\n    heroesFetched,\n    heroesFetchingError,\n    heroCreated,\n    heroDeleted\n} from '../actions';\n \n const initialState = {\n    heroes: [],\n    heroesLoadingStatus: 'idle'\n}\n\nconst heroes  = createReducer(initialState, {\n    [heroesFetching] : state => {state.heroesLoadingStatus = 'loading'},\n    [heroesFetched] : (state, action) =>{\n                    state.heroesLoadingStatus = 'idle';\n                    state.heroes = action.payload;\n                },\n    [heroesFetchingError] : state => { state.heroesLoadingStatus = 'error'},\n    [heroCreated] : (state, action) => {state.heroes.push(action.payload)},\n    [heroDeleted] : (state, action) =>{state.heroes = state.heroes.filter(item => item.id !== action.payload)}\n    },\n    [],\n    state => state\n) \n\n// const heroes  = createReducer(initialState, builder =>{\n//     builder\n//         .addCase(heroesFetching, state => {\n//             state.heroesLoadingStatus = 'loading';\n//         })\n//         .addCase(heroesFetched, (state, action) =>{\n//             state.heroesLoadingStatus = 'idle';\n//             state.heroes = action.payload;\n//         })\n//         .addCase(heroesFetchingError, state => {\n//             state.heroesLoadingStatus = 'error';\n//         })\n//         .addCase(heroCreated, (state, action) =>{\n//             state.heroes.push(action.payload);\n//         })\n//         .addCase(heroDeleted, (state, action) =>{\n//             state.heroes = state.heroes.filter(item => item.id !== action.payload);\n//         })\n//         .addDefaultCase(() => {});\n// }) \n\n// const heroes = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'HEROES_FETCHING':\n//             return {\n//                 ...state,\n//                 heroesLoadingStatus: 'loading'\n//             }\n//         case 'HEROES_FETCHED':\n//             return {\n//                 ...state,\n//                 heroes: action.payload,\n//                 heroesLoadingStatus: 'idle'\n//             }\n//         case 'HEROES_FETCHING_ERROR':\n//             return {\n//                 ...state,\n//                 heroesLoadingStatus: 'error'\n//             }\n//         case 'HERO_CREATED':\n//             return {\n//                 ...state,\n//                 heroes: [...state.heroes, action.payload]\n//             }\n//         case 'HERO_DELETED': \n//             return {\n//                 ...state,\n//                 heroes: state.heroes.filter(item => item.id !== action.payload)\n//             }\n//         default: return state\n//     }\n// }\n\nexport default heroes;","const initialState = {\n    filters: [],\n    filtersLoadingStatus: 'idle',\n    activeFilter: 'all'\n}\n\nconst filters = (state = initialState, action) => {\n    switch (action.type) {\n        case 'FILTERS_FETCHING':\n            return {\n                ...state,\n                filtersLoadingStatus: 'loading'\n            }\n        case 'FILTERS_FETCHED':\n            return {\n                ...state,\n                filters: action.payload,\n                filtersLoadingStatus: 'idle'\n            }\n        case 'FILTERS_FETCHING_ERROR':\n            return {\n                ...state,\n                filtersLoadingStatus: 'error'\n            }\n        case 'ACTIVE_FILTER_CHANGED':\n            return {\n                ...state,\n                activeFilter: action.payload\n            }\n        default: return state\n    }\n}\n\nexport default filters;","// import { createStore, combineReducers, compose, applyMiddleware} from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\n// import ReduxThunk from 'redux-thunk'; не использую\nimport heroes from '../reducers/heroes';\nimport filters from '../reducers/filters';\n\nconst stringMiddleware = () => (next) => (action) =>{\n    if(typeof action === 'string'){\n        return next({\n            type: action\n        })\n    } \n    return next(action); \n};\n\n// const store = createStore( \n//                     combineReducers({heroes, filters}),\n//                     compose(\n//                         applyMiddleware(ReduxThunk, stringMiddleware),\n//                         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//                     ));\n\nconst store = configureStore({\n    reducer: {heroes, filters}, \n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware), \n    devTools: process.env.NODE_ENV !== 'production', \n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}